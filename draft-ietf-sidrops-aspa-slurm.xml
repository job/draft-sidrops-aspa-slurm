<?xml version="1.0" encoding="UTF-8"?>

<?rfc sortrefs="yes"?>
<?rfc subcompact="no"?>
<?rfc symrefs="yes"?>
<?rfc toc="yes"?>
<?rfc tocdepth="3"?>
<?rfc compact="yes"?>
<?rfc subcompact="no"?>

<rfc xmlns:xi="http://www.w3.org/2001/XInclude"
  category="std"
  docName="draft-ietf-sidrops-aspa-slurm-00"
  updates="8416"
  ipr="trust200902"
  submissionType="IETF"
  consensus="true">

<front>

  <title abbrev="SLURM for RPKI ASPA">Simplified Local Internet Number Resource Management (SLURM) with RPKI Autonomous System Provider Authorizations (ASPA)</title>

  <author fullname="Job Snijders" initials="J." surname="Snijders">
    <organization>Fastly</organization>
    <address>
      <postal>
        <street />
        <city>Amsterdam</city>
        <code />
        <country>Netherlands</country>
      </postal>
      <email>job@fastly.com</email>
    </address>
  </author>

  <author fullname="Ben Cartwright-Cox" initials="B." surname="Cartwright-Cox">
    <organization>Port 179 Ltd</organization>
    <address>
      <postal>
        <street />
        <city>London</city>
        <code />
        <country>United Kingdom</country>
      </postal>
      <email>ben@benjojo.co.uk</email>
    </address>
  </author>
  <date />

  <area>OPS</area>
  <workgroup>SIDROPS</workgroup>

  <keyword>ASPA</keyword>
  <keyword>EBGP</keyword>

  <abstract>

    <t>
      ISPs may want to establish a local view of exceptions to the Resource Public Key Infrastructure (RPKI) data in the form of local filters or additional attestations.
      This document defines an addendum to RFC 8416 by specifying a format for local filters and local assertions for Autonomous System Provider Authorizations (ASPA) for use with the RPKI.
    </t>

  </abstract>

  <note title="Requirements Language">
      <t>
        The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.
      </t>
  </note>

</front>

<middle>

  <section title="Introduction">

    <t>
      ISPs may want to establish a local view of exceptions to the Resource Public Key Infrastructure (RPKI) data in the form of local filters or additional attestations.
      This document defines an addendum to RFC 8416 by specifying a format for local filters and local assertions for Autonomous System Provider Authorizations (ASPA) for use with the RPKI.
    </t>

    <t>
      See <xref target="RFC8416"/> for an overview of the SLURM mechanism, specifically Section 3 and Section 4.
    </t>
  </section>

  <section title="SLURM v2 File Overview">
    <t>
      A SLURM file consists of a single JSON <xref target="RFC8259"/> object containing the following members:
    </t>
    <ul>
      <li>A "slurmVersion" member that MUST be set to 2, encoded as a number</li>
      <li>
        A "validationOutputFilters" member whose value is an object.
        The object MUST contain exactly three members:
        <ul>
          <li>A "prefixFilters" member, see Section 3.3.1 <xref target="RFC8416"/></li>
          <li>A "bgpsecFilters" member, see section 3.3.2 <xref target="RFC8416"/></li>
          <li>A "aspaFilters" member, see <xref target="aspaFilters"/></li>
        </ul>
      </li>
      <li>
        A "locallyAddedAssertions" member whose value is an object.
        The object MUST contain exactly three members:
        <ul>
          <li>A "prefixAssertions" member, see Section 3.4.1 <xref target="RFC8416"/></li>
          <li>A "bgpsecAssertions" member, see Section 3.4.2 <xref target="RFC8416"/></li>
          <li>A "aspaAssertions" member, see <xref target="aspaAssertions"/></li>
        </ul>
      </li>
    </ul>

    <t>
      The following JSON structure with JSON members represents a SLURM file that has no filters or assertions:
    </t>

    <figure><artwork>
<![CDATA[
{
  "slurmVersion": 2,
  "validationOutputFilters": {
    "aspaFilters": [],
    "bgpsecFilters": [],
    "prefixFilters": []
  },
  "locallyAddedAssertions": {
    "aspaAssertions": [],
    "bgpsecAssertions": [],
    "prefixAssertions": []
  }
}
]]>
    </artwork></figure>
  </section>

  <section title="Validation Output Filters for ASPA">

    <section title="Validated ASPA Filters" anchor="aspaFilters">
      <t>
        The RP can configure zero or more Validated ASPA Filters ("ASPA Filters" for short).
        Each ASPA Filter contains a single 'customerAsn' and optionally a single 'comment'.
      </t>
      <ul>
        <li>The 'customerAsn' field contains the AS number of the Customer Autonomous System that is the authorizing entity.</li>
        <li>It is RECOMMENDED that an explanatory comment be included with each ASPA Filter so that it can be shown to users of the RP software.</li>
      </ul>
      <t>
        Any Validated ASPA Payload (VAP) <xref target="I-D.ietf-sidrops-aspa-profile"/> that matches any configured ASPA Filter MUST be removed from the RP's output.
      </t>
      <t>
        A VAP is considered to match with an ASPA Filter if the following condition applies:
      </t>
      <ol>
        <li>The VAP is considered to match if the VAP Customer ASN is equal to the ASPA Filter Customer ASN.</li>
      </ol>
      <t>
        The following example JSON structure represents a "aspaFilters" member with one object as described above:
      </t>
      <figure><artwork>
<![CDATA[
"aspaFilter": [
  {
    "customerAsn": 64496,
    "comment": "Filter out ASPA Payloads which specify AS 64496 as the Customer Asn"
  }
]
]]>
      </artwork></figure>

    </section>

    <section title="Locally Added ASPA Assertions" anchor="aspaAssertions">
      <t>
        Each RP is locally configured with a (possibly empty) array of ASPA Assertions.
        Each ASPA Assertion MUST contain a 'customerAsn' member containing the Customer ASN and a 'providerAsns' array of numbers, reflecting the set of Provider ASNs.
        It is RECOMMENDED that an explanatory comment be included that may be shown to users of the RP software.
      </t>
      <t>
        The above is expressed as a value of the "aspaAssertions" member, as an array of zero or more objects.
        Each object MUST contain one each of all of the following members:
      </t>
      <ul>
        <li>A "customerAsn" member whose value is a number.</li>
        <li>A "providerAsns" member whose value is an array of numbers.</li>
        <li>An optional "comment" member whose value is a string.</li>
      </ul>
      <t>
        In addition to the constraints described by the formal ASN.1 definition, the contents of the providerAsns field MUST satisfy the following constraints:
      </t>
      <ul>
        <li>The customerAsn value MUST NOT appear in any ASN in the providerAsns field.</li>
        <li>The elements of providerAsns MUST be ordered in ascending numerical order.</li>
        <li>Each value of ASN MUST be unique (with respect to the other elements of providers).</li>
      </ul>
      <t>
        The following example JSON structure represents a "aspaAssertions" member with one object as described above:
      </t>
      <figure><artwork>
<![CDATA[
"aspaAssertions": [
  {
    "customerAsn": 64496,
    "providerSet": [64497, 64498],
    "comment": "Locally assert 64497 are 64498 are providers to 64496"
  }
]
]]>
      </artwork></figure>
      <t>
        Note that an "aspaAssertions" member matches the syntax of the ASPA PDU described in Section 5.12 of <xref target="I-D.ietf-sidrops-8210bis"/>.
        Relying Parties MUST add any "aspaAssertions" member thus found to the set of ASPA PDUs, excluding duplicates, when using version 2 of the RPKI-Router protocol <xref target="I-D.ietf-sidrops-8210bis"/>.
        An "aspaAssertions" does not act as an implicit filter.
      </t>
    </section>

  </section>

  <section title="Example of a SLURM file with ASPA Filters and Assertions">

    <figure><artwork>
<![CDATA[
{
  "slurmVersion": 2,
  "validationOutputFilters": {
    "prefixFilters": [
      {
        "prefix": "192.0.2.0/24",
        "comment": "All VRPs encompassed by prefix"
      },
      {
        "asn": 64496,
        "comment": "All VRPs matching ASN"
      },
      {
        "prefix": "198.51.100.0/24",
        "asn": 64497,
        "comment": "All VRPs encompassed by prefix, matching ASN"
      }
    ],
    "bgpsecFilters": [
      {
        "asn": 64496,
        "comment": "All keys for ASN"
      },
      {
        "SKI": "voibVdC3Nzl9dcSfSFuFj6mK0R8",
        "comment": "Key matching Router SKI"
      },
      {
        "asn": 64497,
        "SKI": "UQ9IXSminbe1FfnEePjtPLeqfSM",
        "comment": "Key for ASN 64497 matching Router SKI"
      }
    ],
    "aspaFilters": [
      {
        "customerAsn": 64496,
        "comment": "ASPAs matching Customer ASN 64496"
      }
    ]
  },
  "locallyAddedAssertions": {
    "prefixAssertions": [
      {
        "asn": 64496,
        "prefix": "198.51.100.0/24",
        "comment": "My other important route"
      },
      {
        "asn": 64496,
        "prefix": "2001:db8::/32",
        "maxPrefixLength": 48,
        "comment": "My other important de-aggregated routes"
      }
    ],
    "bgpsecAssertions": [
      {
        "asn": 64496,
        "comment" : "My known key for my important ASN",
        "SKI": "XUJQ4tgdREjYop786R0p/wdeyeI",
        "routerPublicKey": "MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEgFcjQ/g//LAQerAH2Mpp+GucoDAGBbhIqD33wNPsXxnAGb+mtZ7XQrVO9DQ6UlAShtig5+QfEKpTtFgiqfiAFQ"
      }
    ],
    "aspaAssertions": [
      {
        "customerAsn": 64496,
        "providerSet": [64497, 64498],
        "comment": "Locally assert 64497 and 64498 are providers for 64496"
      }
    ]
  }
}
]]>
    </artwork></figure>
  </section>

  <section title="Security Considerations">
    <t>
      For Security Considerations see Section 6 of <xref target="RFC8416"/>.
    </t>
  </section>

  <section title="IANA Considerations">
    <t>
      This document has no IANA actions.
    </t>
  </section>

  <section title="Acknowledgements">
    <t>
      The authors would like to thank
      <contact fullname="Tim Bruijnzeels"/>
      for their helpful review of this document.
    </t>
  </section>

</middle>

<back>

  <references title="Normative References">
    <?rfc include="reference.RFC.2119.xml"?>
    <?rfc include="reference.RFC.8174.xml"?>
    <?rfc include="reference.RFC.8259.xml"?>
    <?rfc include="reference.RFC.8416.xml"?>
    <?rfc include="reference.I-D.ietf-sidrops-aspa-profile.xml"?>
    <xi:include href="https://bib.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-sidrops-8210bis.xml"/>
  </references>

  <references title="Informative References">

    <reference anchor="stayrtr" target="https://github.com/bgp/stayrtr">
      <front>
        <title>StayRTR</title>
        <author fullname="Ben Cartwright-Cox">
          <organization>Port 179 Ltd</organization>
        </author>
        <date year="2023" />
      </front>
    </reference>

  </references>

  <section title="Implementation status - RFC EDITOR: REMOVE BEFORE PUBLICATION">
    <t>
      This section records the status of known implementations of the protocol defined by this specification at the time of posting of this Internet-Draft, and is based on a proposal described in RFC 7942.
      The description of implementations in this section is intended to assist the IETF in its decision processes in progressing drafts to RFCs.
      Please note that the listing of any individual implementation here does not imply endorsement by the IETF.
      Furthermore, no effort has been spent to verify the information presented here that was supplied by IETF contributors.
      This is not intended as, and must not be construed to be, a catalog of available implementations or their features.
      Readers are advised to note that other implementations may exist.
    </t>

    <t>
      According to RFC 7942, "this will allow reviewers and working groups to assign due consideration to documents that have the benefit of running code, which may serve as evidence of valuable experimentation and feedback that have made the implemented protocols more mature.
      It is up to the individual working groups to use this information as they see fit".
    </t>

    <t>
      <list style="symbols">
        <t>
          StayRTR <xref target="stayrtr"/>
        </t>
      </list>
    </t>

  </section>

</back>

</rfc>
